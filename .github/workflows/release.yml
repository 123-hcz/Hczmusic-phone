name: Release

# 定义触发条件：在 main 分支推送或手动触发工作流
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  # 创建版本号
  increment-version:
    name: Increment Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.NEW_VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # 确保获取所有历史记录和标签

      - name: Increment version
        id: set-version
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          NEW_VERSION=$(echo $VERSION | awk -F. -v OFS=. '{$NF++; print}')
          echo "::set-output name=NEW_VERSION::$NEW_VERSION"

  # Windows 端打包
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    needs: increment-version
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run common build
        run: npm run build

      - name: Run Windows build
        run: npm run electron:build:win 

      - name: Rename Windows artifact
        run: |
          mv "./dist_electron/MoeKoe Music Setup 1.0.0.exe" "./MoeKoe_Music_Setup_${{ needs.increment-version.outputs.version }}.exe"

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-win
          path: ./MoeKoe_Music_Setup_${{ needs.increment-version.outputs.version }}.exe

  # macOS 端打包
  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    needs: increment-version
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run common build
        run: npm run build

      - name: Run macOS build
        run: npm run electron:build:macos

      - name: Rename macOS artifacts
        run: |
          mv "./dist_electron/MoeKoe Music-1.0.0-arm64.dmg" "./MoeKoe_Music_${{ needs.increment-version.outputs.version }}-arm64.dmg"
          mv "./dist_electron/MoeKoe Music-1.0.0-arm64-mac.zip" "./MoeKoe_Music_${{ needs.increment-version.outputs.version }}-arm64-mac.zip"

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-macos
          path: |
            ./MoeKoe_Music_${{ needs.increment-version.outputs.version }}-arm64.dmg
            ./MoeKoe_Music_${{ needs.increment-version.outputs.version }}-arm64-mac.zip

  # Linux 端打包
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    needs: increment-version
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run common build
        run: npm run build

      - name: Run Linux build
        run: npm run electron:build:linux

      - name: Rename Linux artifacts
        run: |
          mv "./dist_electron/MoeKoe Music-1.0.0.AppImage" "./MoeKoe_Music_${{ needs.increment-version.outputs.version }}.AppImage"
          mv "./dist_electron/moekoemusic_1.0.0_amd64.deb" "./moekoemusic_${{ needs.increment-version.outputs.version }}_amd64.deb"

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-linux
          path: |
            ./MoeKoe_Music_${{ needs.increment-version.outputs.version }}.AppImage
            ./moekoemusic_${{ needs.increment-version.outputs.version }}_amd64.deb

  # 创建 GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [increment-version, build-windows, build-macos, build-linux]
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v2
        with:
          name: app-win
          path: ./release

      - name: Download macOS artifacts
        uses: actions/download-artifact@v2
        with:
          name: app-macos
          path: ./release

      - name: Download Linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: app-linux
          path: ./release

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest commit message
        id: get_commit_message
        run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.increment-version.outputs.version }}-Beta
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Release ${{ needs.increment-version.outputs.version }}"
          body: ${{ env.COMMIT_MESSAGE }}
          draft: false
          prerelease: true
          files: ./release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}